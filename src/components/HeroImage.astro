---
import { Image } from "astro:assets";

interface Props {
  image: string;
}

const { image } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif}"
);

// Check if the image is an external URL
const isExternalUrl = image.startsWith('http://') || image.startsWith('https://');

// For local images, prepare the path
let replacedImage: string | null = null;
if (!isExternalUrl) {
  replacedImage = image.replace("../..", "/src");
  if (!images[replacedImage]) {
    throw new Error(
      `"${replacedImage}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
    );
  }
}
---

{isExternalUrl ? (
  <img
    src={image}
    alt=""
    class="absolute inset-0 h-full w-full rounded-2xl bg-base-50 dark:bg-base-900 object-cover"
  />
) : replacedImage && (
  <Image
    src={(await images[replacedImage]()).default}
    alt=""
    class="absolute inset-0 h-full w-full rounded-2xl bg-base-50 dark:bg-base-900 object-cover"
  />
)}
<div class="absolute inset-0 rounded-2xl ring-1 ring-inset ring-base-900/10 dark:ring-base-100/10"></div>
